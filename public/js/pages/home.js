/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/pages/home.js":
/*!************************************!*\
  !*** ./resources/js/pages/home.js ***!
  \************************************/
/***/ (() => {

eval("function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nvar input = document.querySelector(\"#phoneInput\");\nwindow.phoneNumberInput = intlTelInput(input, {\n  separateDialCode: true\n});\nvar form = document.querySelector('#form-wrapper form');\nvar inputs = form.querySelectorAll(\"input, select, textarea\");\nif (form instanceof HTMLFormElement) {\n  var handleInvalidInput = function handleInvalidInput() {\n    input.classList.add(\"error\");\n  };\n  form.addEventListener('submit', function (e) {\n    e.preventDefault();\n    var submitBtn = form.querySelector('button[type=submit]');\n    if (submitBtn instanceof HTMLButtonElement) {\n      submitBtn.disabled = true;\n      submitBtn.innerHTML = '<i class=\"fa fa-spinner fa-spin\"></i>';\n    }\n    var formData = new FormData();\n    formData.set('first_name', document.querySelector('#firstNameInput').value);\n    formData.set('last_name', document.querySelector('#lastNameInput').value);\n    formData.set('email', document.querySelector('#emailInput').value);\n    formData.set('age', document.querySelector('#ageInput').value);\n    formData.set('height', document.querySelector('#heightInput').value);\n    formData.set('weight', document.querySelector('#weightInput').value);\n    formData.set('gender', document.querySelector('#genderInput').value);\n    formData.set('hearing_about_us_source', document.querySelector('#sourceInput').value);\n    formData.set('country_id', document.querySelector('#countryInput').value);\n    formData.set('phone_number', document.querySelector('#phoneInput').value);\n    formData.set('phone_code', phoneNumberInput.selectedCountryData.dialCode);\n    formData.set('front_side', document.querySelector('#frontSideInput').files[0]);\n    formData.set('front_closed', document.querySelector('#frontClosedInput').files[0]);\n    formData.set('right_side', document.querySelector('#rightSideInput').files[0]);\n    formData.set('right_closed', document.querySelector('#rightClosedSideInput').files[0]);\n    axios.post('/api/apply', formData, {\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        'Accept': 'application/json'\n      }\n    }).then(function (response) {\n      submitBtn.innerHTML = 'Apply';\n      $(form).find('.dropdown img').toArray().forEach(function (imgElement) {\n        imgElement.src = imgElement.getAttribute('data-src');\n      });\n      submitBtn.disabled = false;\n      document.querySelector('#error-feedback').innerText = '';\n      document.querySelector('#success-feedback').innerText = response.data.message;\n      form.reset();\n      inputs.forEach(function (input) {\n        input.removeEventListener(\"invalid\", handleInvalidInput, false);\n      });\n    })[\"catch\"](function (error) {\n      submitBtn.innerHTML = 'Apply';\n      submitBtn.disabled = false;\n      if (error.response && error.response.status === 422) {\n        document.querySelector('#error-feedback').innerText = error.response.data.errors ? Object.values(error.response.data.errors).join('\\n') : error.response.data.message;\n      } else if (error.response) {\n        toastr.error(error.response.data.message);\n      }\n      console.log(error);\n    });\n  });\n  inputs.forEach(function (input) {\n    input.addEventListener(\"invalid\", handleInvalidInput, false);\n  });\n}\nform.querySelectorAll('input[type=file]').forEach(function (inputElement) {\n  inputElement.addEventListener('change', previewUploadedImage);\n});\nvar usePictureButtonElement = document.querySelector('#use-picture');\nvar retakePictureButtonElement = document.querySelector('#retake-picture');\nvar takePictureButtonElement = document.querySelector('#take-picture');\nvar controlsElement = document.getElementById('picture-controls');\nvar webcamElement = document.getElementById('webcam-live');\nvar canvasElement = document.getElementById('picture-canvas');\nwebcamElement.width = 1200;\nvar webcam = new Webcam[\"default\"](webcamElement, 'user', canvasElement);\nvar selectedInputId = null;\nvar picture = null;\ndocument.querySelector('#previewSnapshotModal').addEventListener('hide.bs.modal', function () {\n  webcam.stop();\n  reTakePicture();\n});\nform.querySelectorAll('.request-take-picture-btn').forEach(function (buttonElement) {\n  buttonElement.addEventListener('click', function () {\n    initWebcam(buttonElement);\n  });\n});\nfunction initWebcam(buttonElement) {\n  $('#previewSnapshotModal').modal('show');\n  selectedInputId = $(buttonElement).parents('.dropdown:first').attr('data-target');\n  var text = $('input#' + selectedInputId).attr('data-text');\n  $('#previewSnapshotModalLabel').text('Take a Photo - ' + text);\n  webcam.start().then(function () {\n    takePictureButtonElement.removeEventListener('click', preSavePictureFromCamera);\n    takePictureButtonElement.addEventListener('click', preSavePictureFromCamera);\n  })[\"catch\"](function (err) {\n    console.log(err);\n  });\n}\nfunction preSavePictureFromCamera() {\n  webcamElement.classList.remove('mx-w-full');\n  picture = webcam.snap();\n  webcamElement.classList.add('mx-w-full');\n  webcamElement.classList.add('d-none');\n  canvasElement.classList.remove('d-none');\n  canvasElement.classList.add('mx-w-full');\n  controlsElement.classList.remove('d-none');\n  controlsElement.classList.add('d-flex');\n  takePictureButtonElement.classList.add('d-none');\n  usePictureButtonElement.removeEventListener('click', savePicture);\n  usePictureButtonElement.addEventListener('click', savePicture);\n  retakePictureButtonElement.removeEventListener('click', reTakePicture);\n  retakePictureButtonElement.addEventListener('click', reTakePicture);\n}\nfunction savePicture() {\n  webcam.stop();\n  $('#previewSnapshotModal').modal('hide');\n  $(\".dropdown[data-target=\\\"\".concat(selectedInputId, \"\\\"] img\")).attr('src', picture);\n  fetch(picture).then(function (res) {\n    return res.blob();\n  }).then(function (blob) {\n    var pictureFile = new File([blob], 'image.png', {\n      type: blob.type\n    });\n    var dataTransfer = new DataTransfer();\n    dataTransfer.items.add(pictureFile);\n    document.querySelector('input#' + selectedInputId).files = dataTransfer.files;\n    reTakePicture();\n  });\n}\nfunction reTakePicture() {\n  webcamElement.classList.remove('d-none');\n  canvasElement.classList.add('d-none');\n  canvasElement.classList.remove('mx-w-full');\n  controlsElement.classList.add('d-none');\n  controlsElement.classList.remove('d-flex');\n  takePictureButtonElement.classList.remove('d-none');\n}\nfunction previewUploadedImage(e) {\n  var _e$currentTarget$file = _slicedToArray(e.currentTarget.files, 1),\n    file = _e$currentTarget$file[0];\n  var label = e.currentTarget.labels[0];\n  var labelDropdown = e.currentTarget.labels[1];\n  if (file) {\n    $(labelDropdown).parents('.dropdown:first').find('img').attr('src', URL.createObjectURL(file));\n    label.querySelector('img').src = URL.createObjectURL(file);\n  } else {\n    $(labelDropdown).parents('.dropdown:first').find('img').attr('src', $(label).parents('.dropdown:first').find('img').attr('data-src'));\n    label.querySelector('img').src = label.querySelector('img').getAttribute('data-src');\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/pages/home.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/js/pages/home.js"]();
/******/ 	
/******/ })()
;